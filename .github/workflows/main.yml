name: Build and Deploy to EKS

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'  # Specify the distribution (e.g., 'temurin', 'zulu', 'adopt')
          java-version: '11'

      - name: Build with Maven
        run: mvn package

      - name: Upload .war file
        uses: actions/upload-artifact@v4
        with:
          name: my-webapp-war
          path: target/*.war

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: yogeshecrrepo
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: v1.20.0

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --name exciting-rock-pumpkin --region ${{ secrets.AWS_REGION }}

      - name: Verify kubectl connection
        run: kubectl get nodes

      - name: Deploy to EKS
        run: |
          kubectl set image deployment/my-webapp my-webapp=741448935198.dkr.ecr.ap-northeast-3.amazonaws.com/my-webapp:${{ github.sha }} -n my-namespace
          kubectl apply -f deployment.yaml -n my-namespace
          kubectl apply -f service.yaml -n my-namespace
